name: build emerge compiler
run-name: Build & Test the Emerge compiler
on:
  - push
env:
  GLIBC_SOURCE_BALL_URL: "http://mirror.dogado.de/gnu/libc/glibc-2.38.tar.bz2"
  GCC_GIT_REF: "releases/gcc-14.1.0"
  LIBUNWIND_GIT_REF: "v1.8.1"

jobs:
  build-glibc-x86_64:
    name: "build glibc for x86_64-pc-linux-gnu"
    runs-on: ubuntu-latest
    steps:
      - id: cache-glibc
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/glibc-build/csu
            ${{ github.workspace }}/glibc-build/libc.so
          key: glibc-x86_64-pc-linux-gnu-${{ env.GLIBC_SOURCE_BALL_URL }}
      - name: build glibc
        if: steps.cache-glibc.outputs.cache-hit != 'true'
        run: |
          sudo apt-get install bison
          curl "$GLIBC_SOURCE_BALL_URL" | tar --bzip2 --extract
          mv glibc-2.38 glibc-source
          mkdir glibc-build
          cd glibc-build
          $GITHUB_WORKSPACE/glibc-source/configure --host=x86_64-pc-linux-gnu --target=x86_64-pc-linux-gnu --prefix=$GITHUB_WORKSPACE/glibc-install
          N_PHYSICAL_CORES=$(cat /proc/cpuinfo | grep -E 'cpu cores\s*:' | head -1 | sed -E 's/^.*([0-9]+)$/\1/')
          make -j $N_PHYSICAL_CORES
  build-gcc-x86_64:
    name: "build gcc for x86_64-pc-linux-gnu"
    runs-on: ubuntu-latest
    steps:
      - id: cache-gcc
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/gcc-build/x86_64-pc-linux-gnu/libgcc
          key: gcc-x86_64-pc-linux-gnu-${{ env.GCC_GIT_REF }}
      - name: checkout GCC source
        if: steps.cache-gcc.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: gcc-mirror/gcc
          ref: ${{ env.GCC_GIT_REF }}
          path: gcc-source
      - name: build GCC
        if: steps.cache-gcc.outputs.cache-hit != 'true'
        run: |
          sudo apt-get install flex
          cd gcc-source
          contrib/download_prerequisites
          cd $GITHUB_WORKSPACE
          mkdir gcc-build
          cd gcc-build
          $GITHUB_WORKSPACE/gcc-source/configure --host=x86_64-pc-linux-gnu --target=x86_64-pc-linux-gnu --disable-multilib --enable-languages=c
          N_PHYSICAL_CORES=$(cat /proc/cpuinfo | grep -E 'cpu cores\s*:' | head -1 | sed -E 's/^.*([0-9]+)$/\1/')
          make -j $N_PHYSICAL_CORES
  build-libunwind-x86_64:
    name: "build nongnu libunwind for x86_64-pc-linux-gnu"
    runs-on: ubuntu-latest
    steps:
      - id: cache-libunwind
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/libunwind-install/lib
          key: libunwind-x86_64-pc-linux-gnu-${{ env.LIBUNWIND_GIT_REF }}
      - name: checkout libunwind source
        if: steps.cache-libunwind.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: libunwind/libunwind
          ref: ${{ env.LIBUNWIND_GIT_REF }}
          path: ${{ github.workspace }}/libunwind-source
      - name: build libunwind
        if: steps.cache-libunwind.outputs.cache-hit != 'true'
        run: |
          cd ${{ github.workspace }}/libunwind-source
          autoreconf -i
          ./configure "--prefix=${{ github.workspace }}/libunwind-install"
          make
          make install
  emerge-compiler-maven:
    runs-on: ubuntu-22.04
    name: emerge compiler maven verify
    needs:
      - build-gcc-x86_64
      - build-glibc-x86_64
      - build-libunwind-x86_64
    steps:
      - name: get C-runtime binaries from glibc
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ github.workspace }}/glibc-build/csu
            ${{ github.workspace }}/glibc-build/libc.so
          key: glibc-x86_64-pc-linux-gnu-${{ env.GLIBC_SOURCE_BALL_URL }}
          fail-on-cache-miss: true
      - name: get C-runtime binaries from gcc
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ github.workspace }}/gcc-build/x86_64-pc-linux-gnu/libgcc
          key: gcc-x86_64-pc-linux-gnu-${{ env.GCC_GIT_REF }}
          fail-on-cache-miss: true
      - name: checkout
        uses: actions/checkout@v4
      - name: set up external-deps.properties file
        run: |
          echo "" > external-deps.properties
          echo "emerge-compiler.ext-deps.llvm.x86_64-pc-linux-gnu.scrt1=${{ env.GITHUB_WORKSPACE }}/glibc-build/csu/Scrt1.o" | tee -a external-deps.properties
          echo "emerge-compiler.ext-deps.llvm.x86_64-pc-linux-gnu.crtbeginS=${{ env.GITHUB_WORKSPACE }}/gcc-build/x86_64-pc-linux-gnu/libgcc/crtbeginS.o" | tee -a external-deps.properties
          echo "emerge-compiler.ext-deps.llvm.x86_64-pc-linux-gnu.crtendS=${{ env.GITHUB_WORKSPACE }}/gcc-build/x86_64-pc-linux-gnu/libgcc/crtendS.o" | tee -a external-deps.properties
          echo "emerge-compiler.ext-deps.llvm.x86_64-pc-linux-gnu.libcSO-6=${{ env.GITHUB_WORKSPACE }}/glibc-build/x86_64-pc-linux-gnu/libc.so" | tee -a external-deps.properties
          echo "emerge-compiler.ext-deps.llvm.x86_64-pc-linux-gnu.libunwindA=${{ env.GITHUB_WORKSPACE }}/libunwind-install/lib/libunwind-x86_64.a" | tee -a external-deps.properties
          cat external-deps.properties
      - name: Set up JDK 21
        uses: actions/setup-java@v4.0.0
        with:
          java-version-file: .java-version
          distribution: zulu
          cache: maven
      - name: mvn clean verify
        run: mvn -B clean verify

# Copied from github.com/llvm/llvm-project Actions

env:
  LLVM_REF: llvmorg-20.1.8

name: "Build LLVM for Linux"
on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-llvm-windows:
    name: "Build LLVM x86_64-unknown-linux-gnu"
    runs-on: ubuntu-22.04
    env:
      LLVM_INSTALL_PATH: ${{ github.workspace }}/llvm-install
      LLVM_BUILD_PATH: ${{ github.workspace }}/llvm-build
    steps:
      - name: cache
        id: cache
        uses: actions/cache@v4.2.2
        with:
          path: |
            ${{ env.LLVM_INSTALL_PATH }}
          key: llvm-built-${{ env.LLVM_REF }}
      - name: Fetch LLVM sources
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: llvm/llvm-project
          ref: ${{ env.LLVM_REF }}
          fetch-depth: 2
      - name: install llvm-19
        id: setup
        run: sudo apt install clang-19 llvm-19-linker-tools
      - name: Configure LLVM
        if: steps.cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          cmake \
            -G "Ninja" \
            -S llvm \
            -B $LLVM_BUILD_PATH \
            -DLLVM_USE_LINKER=gold \
            -DLLVM_BUILD_LLVM_C_DYLIB=Off \
            -DLLVM_BUILD_LLVM_DYLIB=On \
            -DLLVM_LINK_LLVM_DYLIB=On \
            -DCMAKE_INSTALL_PREFIX=$LLVM_INSTALL_PATH \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLVM_ENABLE_ASSERTIONS=On \
            -DCMAKE_C_COMPILER="/usr/lib/llvm-19/bin/clang" \
            -DCMAKE_CXX_COMPILER="/usr/lib/llvm-19/bin/clang++" \
            -DLLVM_TARGETS_TO_BUILD=X86 \
            -DLLVM_ENABLE_DIA_SDK=OFF \
            -DLLVM_ENABLE_LIBXML2=OFF \
            -DLLVM_INCLUDE_TESTS=OFF \
            -DPYTHON_EXECUTABLE="$(where python.exe | head -1)" \
            -DLLVM_ENABLE_ZSTD=OFF \
            -DLLVM_ENABLE_PROJECTS="llvm;lld"
      - name: Build LLVM
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cd "${{ env.LLVM_BUILD_PATH }}"
          ninja
          ninja install
      - name: Collect artifacts
        uses: actions/upload-artifact@v4
        with:
          name: llvm-linux-gnu-x86_64
          path: |
            ${{ env.LLVM_INSTALL_PATH }}

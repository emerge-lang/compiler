name: Create Release
run-name: Release ${{ inputs.version }}
on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version number, e.g. 1.4.2"
        required: true
        type: string
      from-branch:
        description: "The branch on which to create the commit"
        required: true
        type: string
        default: "main"
      make-latest:
        description: "Mark this as the latest release"
        required: true
        type: boolean
        default: true

permissions:
  contents: write
  actions: read

jobs:
  tag-release:
    runs-on: ubuntu-22.04
    outputs:
      tag: "${{ steps.tag-release.outputs.tag }}"
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.from-branch }}
      - name: create local release branch
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          RELEASE_BRANCH="release/${{ inputs.version }}"
          echo "RELEASE_BRANCH=$RELEASE_BRANCH" >> "$GITHUB_ENV"
          git checkout -b "$RELEASE_BRANCH"
      - name: update versions in source
        run: |
          mvn -B versions:set "-DnewVersion=${{ inputs.version }}" -DgenerateBackupPoms=false
          git add pom.xml
          git add "**/pom.xml"
          git commit -m "Set version to ${{ inputs.version }}"
      - name: tag release
        id: tag-release
        run: |
          git checkout "${{ github.event.repository.default_branch }}"
          git merge --ff-only "$RELEASE_BRANCH"
          RELEASE_TAG="v${{ inputs.version }}"
          git tag "$RELEASE_TAG"
          git push
          git push --tags
          echo "tag=$RELEASE_TAG" >> "$GITHUB_OUTPUT"
          echo "tag_commit_sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
  build-releasable-binaries:
    uses: ./.github/workflows/build-emerge.yaml
    needs: tag-release
    with:
      kotlin-ref: "${{ needs.tag-release.outputs.tag }}"
  deb-package:
    runs-on: ubuntu-22.04
    needs:
      - build-releasable-binaries
    outputs:
      deb-filename: "${{ steps.deb-package.outputs.deb_file_name }}"
    steps:
      - name: download tarball
        uses: actions/download-artifact@v4.1.8
        with:
          run-id: "${{ needs.build-releasable-binaries.run-id }}"
          name: tarball
      - name: make debian package
        id: deb-package
        run: |
          # set variables, also for envsubst in the package files
          TOOLCHAIN_VERSION="${{ inputs.version }}"
          DEB_NAME="emerge-toolchain-${TOOLCHAIN_VERSION}"
          DEB_VERSION="1.0.0"
          RELEASE_REF="refs/tags/${{ needs.tag-release.outputs.tag }}"
          RELEASE_COMMIT_SHA="${{ needs.tag-release.outputs.tag_commit_sha}}"
          mkdir -p "deb-package/$DEB_NAME" && pushd $_
            mkdir -p "opt/emerge-toolchain/${TOOLCHAIN_VERSION}" && pushd $_
              tar --extract --preserve-permissions --file "${{ github.workspace }}/${{ needs.build-releasable-binaries.outputs.tarball-filename }}"
            popd
            cp -r "${{ github.workspace }}/dist/linux/deb/"* .
            envsubst < DEBIAN/control | sponge DEBIAN/control
            envsubst < DEBIAN/postinst | sponge DEBIAN/postinst
            chown -R root DEBIAN
            chgrp -R root DEBIAN
            chmod uga=rx DEBIAN/postinst
          popd
          dpkg --build "deb-package/$DEB_NAME"
          echo "deb_file_name=${DEB_NAME}.deb" >> "$GITHUB_OUTPUT"
          echo "deb_file_path=${{ github.workspace }}/deb-package/${DEB_NAME}.deb" >> "$GITHUB_OUTPUT"
      - name: archive debian package
        uses: actions/upload-artifact@v4
        with:
          name: deb
          path: "${{ steps.deb-package.outputs.deb_file_path }}"
  create-release:
    runs-on: ubuntu-22.04
    needs:
      - tag-release
      - build-releasable-binaries
      - deb-package
    steps:
      - name: download tarball
        uses: actions/download-artifact@v4.1.8
        with:
          run-id: "${{ needs.build-releasable-binaries.run-id }}"
          name: tarball
      - name: rename tarball for release
        id: release-tarball
        run: |
          TARBALL_PATH="${{ github.workspace }}/${{ needs.build-releasable-binaries.outputs.tarball-filename }}"
          TARBALL_BASENAME="$(basename "$TARBALL_PATH")"
          TARBALL_EXT="${TARBALL_BASENAME#*.}"
          RELEASE_TARBALL_NAME="emerge-toolchain-${{ inputs.version }}.$TARBALL_EXT"
          mv "$TARBALL_PATH" "$RELEASE_TARBALL_NAME"
          echo "release_tarball_path=${{ github.workspace }}/$RELEASE_TARBALL_NAME" >> "$GITHUB_OUTPUT"
      - name: download deb file
        uses: actions/download-artifact@v4.1.8
        with:
          name: deb
      - name: create release
        uses: softprops/action-gh-release@v2.0.8
        with:
          tag_name: "${{ needs.tag-release.outputs.tag }}"
          name: "${{ inputs.version }}"
          fail_on_unmatched_files: true
          target_commitish: "${{ needs.tag-release.outputs.tag_commit_sha }}"
          make_latest: "${{ inputs.make-latest }}"
          files: |
            ${{ steps.release-tarball.outputs.release_tarball_path }}
            ${{ github.workspace }}/${{ needs.deb-package.outputs.deb-filename }}
